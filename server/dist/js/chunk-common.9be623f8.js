(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[1],{1:function(t,e){},10:function(t,e){},11:function(t,e){},12:function(t,e){},13:function(t,e){},14:function(t,e){},15:function(t,e){},16:function(t,e){},17:function(t,e){},18:function(t,e){},19:function(t,e){},2:function(t,e){},20:function(t,e){},21:function(t,e){},22:function(t,e){},3:function(t,e){},4:function(t,e){},5:function(t,e){},5100:function(t,e){t.exports.ContractABI=[{inputs:[{internalType:"address",name:"_tokenContract",type:"address"},{internalType:"uint256",name:"_minAmount",type:"uint256"},{internalType:"uint256",name:"_commission",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[],name:"commissionPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"enter",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"lotteryNo",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"draw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"players",outputs:[{internalType:"address",name:"depositor",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"playersCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_commission",type:"uint256"}],name:"setCommissionFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"state",outputs:[{internalType:"enum GLot.ContractState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalWeight",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"winners",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenAddress",type:"address"}],name:"withdrawAny",outputs:[],stateMutability:"nonpayable",type:"function"}]},"533d":function(t,e,n){"use strict";n.d(e,"b",(function(){return _})),n.d(e,"a",(function(){return k}));var s=n("99e5"),a=n("2eaf"),i=n("5aac"),o=n.n(i);const r="6ec965132a6e4a4c8dfe24e83e48a259",c={walletconnect:{package:a["a"],options:{bridge:"https://uniswap.bridge.walletconnect.org",infuraId:r}}},p=new o.a({cacheProvider:!1,providerOptions:c,disableInjectedProvider:!1});async function u(t=[]){const{walletAddress:e,receiver:n,network:s,contract:a,symbol:i,hooks:o}=t,r=9e8+parseInt((1e3*Math.random()).toFixed(0)),c=r+"000000000000000000";try{const t=await o._web3.eth.getGasPrice();await a.methods.increaseAllowance(n,c).send({from:e,gasPrice:t});return c}catch(p){const t=new Error(p);console.log(t)}}async function l(t=[]){const{receiver:e,network:n,contract:s,symbol:a,hooks:i}=t;try{const t=await s.methods.balanceOf(e).call();return t}catch(o){const t=new Error(o);console.log(t)}}async function d(t=[]){const{amount:e,walletAddress:n,tokenAddress:s,network:a,contract:i,symbol:o,hooks:r}=t;try{const t=e+"000000000000000000",s=await r._web3.eth.getGasPrice(),a=await i.methods.enter(t).send({from:n,gasPrice:s});console.log(a,"result")}catch(c){const t=new Error(c);console.log(t)}}async function y(t=[]){const{walletAddress:e,receiver:n,network:s,contract:a}=t;try{const t=await a.methods.allowance(e,n).call();return t}catch(i){console.log(i)}}const h=[{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],{ContractABI:m}=n("5100"),w={usdt:{97:"0x337610d27c682E347C9cD60BD4b3b107C9d34dDd",56:"0x55d398326f99059fF775485246999027B3197955"},busd:{97:"0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee",56:"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56"},usdd:{56:"0xd17479997F34dd9156Deef8F95A52D81D265be9c"},usdc:{97:"0x64544969ed7EBf5f083679233325356EbE738930",56:"0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d"},dai:{97:"0xEC5dCb5Dbf4B114C9d0F65BcCAb49EC54F6A0867",56:"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3"},testtoken:{5:"0x2d26F5587e2330f7986973F36517e6c075fe115e"}},b={5:"0x86f158D42d21B8e140924f91de39C6Ef2b6c7547"};class f{constructor({provider:t=null,hooks:e}){this._hooks=e,this._provider=t,this._allowance={},this._contracts={},this._receiver={},Object.keys(w).forEach((t=>{this._contracts[t]={}})),Object.keys(b).forEach((t=>{this._receiver[t]=b[t]})),this._provider?(this._walletAddress=t.selectedAddress,this._web3=new s(t)):this.init()}set provider(t){this._provider=t}get provider(){return this._provider}async init(){try{await this.fetchAccountData()}catch(t){return void console.log("Could not get a wallet connection",t)}}async fetchAccountData(){try{this._provider||(this._provider=await p.connect()),this._web3=new s(this._provider),this._provider.enable(),this._provider.on("accountsChanged",(async t=>{await this.fetchAccountData()})),this._provider.on("chainChanged",(async t=>{await this.fetchAccountData()})),this._provider.on("networkChanged",(async()=>{await this.fetchAccountData()}));const t=await this._web3.eth.getAccounts();this._walletAddress=t[0],this._network=await this._web3.eth.net.getId(),this._hooks.$store.dispatch("wallet/setAddress",this._walletAddress),this._hooks.$store.dispatch("wallet/setNetwork",this._network)}catch(t){this.onError({error:t})}}getContract({symbol:t}){t=t.toLowerCase(),this._web3||this.fetchAccountData();const e=new this._web3.eth.Contract(h,w[t][this._network]);return this._contracts[t]=e,this._contracts[t]}getMainContract(){this._web3||this.fetchAccountData();const t=new this._web3.eth.Contract(m,this._receiver[this._network]);return this._contracts.main=t,this._contracts.main}async onCheckApprove({symbol:t}){t=t.toLowerCase();const e=this.getContract({symbol:t});try{return this._allowance[t]||(this._allowance[t]=await y({walletAddress:this._walletAddress,receiver:this._receiver[this._network],symbol:t,network:this._network,contract:e})),this._allowance[t]}catch(n){this.onError({error:n})}}async onApprove({symbol:t}){t=t.toLowerCase();const e=this.getContract({symbol:t});try{this._hooks.$q.loading.show(),this._allowance[t]||(this._allowance[t]=await y({walletAddress:this._walletAddress,receiver:this._receiver[this._network],symbol:t,network:this._network,contract:e})),0==this._allowance[t]&&(this._allowance[t]=await u({walletAddress:this._walletAddress,receiver:this._receiver[this._network],symbol:t,network:this._network,contract:e,hooks:this})),this.onAlert()}catch(n){this.onError({error:n})}}async onDeposit({amount:t,symbol:e}){e=e.toLowerCase();const n=this.getMainContract();try{this._hooks.$q.loading.show();const s=await d({walletAddress:this._walletAddress,amount:t,tokenAddress:w[e][this._network],symbol:e,network:this._network,contract:n,hooks:this});if(s)return this._hooks.$q.notify({type:"positive",message:"tokens has transfered"}),this._hooks.$q.loading.hide(),s;this._hooks.$q.notify({type:"negative",message:"there is a problem"}),this._hooks.$q.loading.hide(),this._hooks.$q.loading.hide()}catch(s){this.onError({error:s})}}async onCheckTotalDeposit({symbol:t}){t=t.toLowerCase();const e=this.getContract({symbol:t});this._hooks.$q.loading.show();try{const n=await l({receiver:this._receiver[this._network],tokenAddress:w[t][this._network],symbol:t,network:this._network,contract:e,hooks:this});return this._hooks.$q.loading.hide(),n}catch(n){this._hooks.$q.loading.hide(),this.onError({error:n})}}async onDisconnect(){console.log("Killing the wallet connection",this._provider),this._provider.close&&(await this._provider.close(),p.clearCachedProvider(),this._provider=null,this._web3=null),this._hooks.$store.dispatch("wallet/setAddress",null)}onError({error:t}){this._hooks.$q.loading.hide(),this._hooks.$q.notify({type:"negative",message:t.message})}onAlert({type:t="danger",message:e="An Error has occurred!"}){this._hooks.$q.loading.hide(),this._hooks.$q.dialog({type:t,dark:!0,title:"Alert",message:e}).onOk((()=>{})).onCancel((()=>{})).onDismiss((()=>{}))}}let _;function k({hooks:t}){_=new f({hooks:t})}},6:function(t,e){},7:function(t,e){},8:function(t,e){},9:function(t,e){}}]);